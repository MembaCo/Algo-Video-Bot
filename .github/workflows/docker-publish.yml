# @author: MembaCo.
# Bu GitHub Actions workflow'u, projeyi bir Docker imajı olarak derler
# ve GitHub Container Registry (GHCR) üzerinde yayınlar.

name: Docker Image CI

# Workflow'un ne zaman çalışacağını belirleyen tetikleyiciler
on:
  # Her 'main' branch'ine push yapıldığında çalışır
  push:
    branches: [ "main" ]
  # Her 'v' ile başlayan bir tag (örn: v1.0, v2.1) push edildiğinde çalışır
  release:
    types: [ published ]

jobs:
  build-and-publish:
    # İşlemin çalışacağı sanal makineyi belirtir
    runs-on: ubuntu-latest

    # Bu job'un GHCR'ye yazma izni olması için gerekli
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Adım: Depodaki kodları sanal makineye indirir
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Adım: GHCR'ye (GitHub Container Registry) giriş yapar
      # GITHUB_TOKEN, GitHub tarafından otomatik olarak oluşturulan geçici bir paroladır.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # ${{ github.repository_owner }} -> "MembaCo" gibi kullanıcı/organizasyon adını alır
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Adım: Docker imajı için etiket ve metadata oluşturur
      # Bu adım, imaj adını, 'latest' etiketini ve Git etiketlerini otomatik olarak ayarlar.
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # ghcr.io/MembaCo/Algo-Video-Bot

      # 4. Adım: Docker imajını derler ve GHCR'ye yükler
      # docker/build-push-action, Dockerfile'ı kullanarak imajı oluşturur ve kayıt defterine gönderir.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Önceki adımda oluşturulan etiketleri kullanır (örn: latest, v1.0.0)
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}